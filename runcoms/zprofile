#
# Executes commands at login pre-zshrc.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Augusto Elesb√£o <aelesbao@users.noreply.github.com>
#

#
# Browser
#

if [[ -z "$BROWSER" ]]; then
  if [[ "$OSTYPE" == darwin* ]]; then
    export BROWSER='open'
  elif [[ "$OSTYPE" == linux* ]]; then
    export BROWSER='xdg-open'
  fi
fi

#
# Editors
#

if [[ -z "$EDITOR" ]]; then
  if (( $+commands[nvim] )); then
    export EDITOR='nvim'
  else
    export EDITOR='vim -X'
  fi
fi
if [[ -z "$VISUAL" ]]; then
  if (( $+commands[nvim] )); then
    export VISUAL='nvim'
  else
    export VISUAL='vim -X'
  fi
fi
if [[ -z "$PAGER" ]]; then
  export PAGER='less'
fi

#
# Language
#

if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
  export LC_COLLATE="en_US.UTF-8"
  export LC_CTYPE="en_US.UTF-8"
  export LC_MESSAGES="en_US.UTF-8"
  export LC_MONETARY="pt_BR.UTF-8"
  export LC_NUMERIC="pt_BR.UTF-8"
  export LC_TIME="pt_BR.UTF-8"
  export LC_ALL=
fi

#
# Paths
#

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

# Set the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
path=(
  $HOME/.local/bin(N)
  /home/linuxbrew/.linuxbrew/bin(N)
  /opt/{homebrew,local}/{,s}bin(N)
  /usr/local/{,s}bin(N)
  $path
  /usr/local/opt/llvm/bin
  /usr/local/share/google-cloud-sdk/bin
  ${KREW_ROOT:-$HOME/.krew}/bin
)

#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X to enable it.
if [[ -z "$LESS" ]]; then
  export LESS='-g -i -M -R -S -w -X -F -z-4'
fi

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if [[ -z "$LESSOPEN" ]] && (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

[[ -d /usr/local/share/zsh/site-functions ]] && site_functions_path=/usr/local/share/zsh/site-functions

# Gradle
[[ -d /usr/local/opt/gradle ]] && export GRADLE_HOME=/usr/local/opt/gradle/libexec

# Groovy
[[ -d /usr/local/opt/groovy/libexec ]] && export GROOVY_HOME=/usr/local/opt/groovy/libexec

# Liquibase
[[ -d /usr/local/opt/liquibase/libexec ]] && export LIQUIBASE_HOME=/usr/local/opt/liquibase/libexec

# Hadoop
[[ -d /usr/local/opt/hadoop/libexec ]] && export HADOOP_HOME=/usr/local/opt/hadoop/libexec

# Spark
[[ -d /usr/local/opt/apache-spark/libexec ]] && export SPARK_HOME=/usr/local/opt/apache-spark/libexec
export PYSPARK_PYTHON=python3

# Android SDK path
[[ -d /usr/local/opt/android-sdk ]] && export ANDROID_HOME=/usr/local/opt/android-sdk

# FindBugs
[[ -d /usr/local/opt/findbugs ]] && export FINDBUGS_HOME=/usr/local/opt/findbugs

# nvm
[[ -d "$HOME/.nvm" ]] && export NVM_DIR="$HOME/.nvm"

# rbenv
if [[ -d "$HOME/.rbenv" ]]; then
  export RBENV_ROOT=$HOME/.rbenv
elif [[ "$OSTYPE" == darwin* ]]; then
  export RBENV_ROOT=/usr/local/var/rbenv
fi

# bat
export BAT_THEME='Catppuccin-mocha'

# FZF - Shell Fuzzy Finder
if [[ $+commands[fzf] ]]; then
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git --color=always'

  # Catppuccin Mocha theme
  export FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS
    --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8
    --color=fg:#cdd6f4,header:#a6e3a1,info:#cba6f7,pointer:#f5e0dc
    --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8
    --ansi"

  # CTRL-/ to toggle small preview window to see the full command
  # CTRL-Y to copy the command into clipboard using pbcopy
  export FZF_CTRL_R_OPTS="
    --delimiter '  '
    --preview 'echo {2} | bat -l zsh --color=always --decorations=never'
    --preview-window up:3:wrap
    --bind 'ctrl-/:toggle-preview'
    --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
    --header 'Press CTRL-Y to copy command into clipboard'
    --height '100%'"
fi

# Skim - Fuzzy finder in Rust
if (( $+commands[sk] )); then
  # Catppuccin Mocha theme
  export SKIM_DEFAULT_OPTIONS="$SKIM_DEFAULT_OPTIONS \
    --color=fg:#cdd6f4,bg:#1e1e2e,matched:#313244,matched_bg:#f2cdcd,current:#cdd6f4,current_bg:#45475a,current_match:#1e1e2e,current_match_bg:#f5e0dc,spinner:#a6e3a1,info:#cba6f7,prompt:#89b4fa,cursor:#f38ba8,selected:#eba0ac,header:#94e2d5,border:#6c7086"
fi

# pyenv
[[ -d /usr/local/var/pyenv ]] && export PYENV_ROOT=/usr/local/var/pyenv
[[ -d "$HOME/.pyenv" ]] && export PYENV_ROOT="$HOME/.pyenv"

# Heroku Client
[[ -d /usr/local/heroku/bin ]] && path+=("/usr/local/heroku/bin")

# Docker Rootless mode
[[ -S "$XDG_RUNTIME_DIR/docker.sock" ]] && export DOCKER_HOST="unix://$XDG_RUNTIME_DIR/docker.sock"

# Go environment
if [[ -d "$HOME/.local/share/go" ]]; then
  export GOPATH="$HOME/.local/share/go"
  path+=("$GOPATH/bin")
fi

# Use Python 3 in Google Cloud cli
export CLOUDSDK_PYTHON=python3

# Avoid Homebrew auto-upgrade
export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=true

export ARCHWAY_SKIP_VERSION_CHECK=true

[[ -f "$HOME/.zprofile.local" ]] && source "$HOME/.zprofile.local"
# vim:ft=zsh
