#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Augusto Elesb√£o <aelesbao@gmail.com>
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

#
# Customize to your needs...
#

autoload -U +X bashcompinit && bashcompinit

# set the options for a terminal device interface
is-callable stty && stty -ixon

# history ignores lines starting with white spaces
setopt HIST_IGNORE_SPACE

# Use CTRL+arrows to move backward and forward words
bindkey ';5D' emacs-backward-word
bindkey ';5C' emacs-forward-word

#
# Aliases
#
is-callable nvim && alias vim='nvim'
is-callable hub && alias git='hub'
is-callable trash && alias rm='trash'
is-callable xh && alias http='xh'
is-callable procs && alias psg='procs' || alias psg='ps aux | grep'

if is-callable lsd; then
  alias ls='lsd --group-dirs=first --blocks=permission,date,size,name'
  alias tree='ls --tree'
fi

if is-callable exa; then
  alias exa='exa --icons --group-directories-first'
  alias ls='exa'
  alias la='ll -a'
  alias l='exa -1a'
  alias tree='exa --tree'
fi

alias resource="source ${HOME}/.zshrc"

alias gc='git cis'
alias ghb='git browse'
alias gr='git rebase'
alias gri='git rebase --interactive'
alias cdgr='cd $(git-root)'

alias dc='docker-compose'

is-callable terragrunt && alias tf="terragrunt" || alias tf="terraform"
is-callable subkey || alias subkey="docker run --name subkey --rm -it parity/subkey"

is-callable pwsafe && alias pwsafe=' pwsafe'

alias date-iso='date +%Y-%m-%dT%H:%M:%S%z'
alias backup='rsync -Phamuzv \
  --exclude "*~" \
  --exclude "*.swp" \
  --exclude "*.DS_Store*" \
  --exclude ".Spotlight-V100" \
  --exclude ".Trashes" \
  --exclude "ehthumbs.db" \
  --exclude "Thumbs.db" \
  --exclude "lost+found"'


alias to-lower='tr "[:upper:]" "[:lower:]"'
alias to-upper='tr "[:lower:]" "[:upper:]"'

if [[ "$OSTYPE" == darwin* ]]; then
  alias list-open-ports='lsof -Pn -i4'
fi

alias youtube-dl-mp3='youtube-dl -x --audio-format mp3 --audio-quality 320K'
alias asciicast2gif='docker run --name asciicast2gif --rm -v $PWD:/data asciinema/asciicast2gif'

#
# Hooks and Completions
#

# direnv
is-callable direnv && eval "$(direnv hook zsh)"

# FZF - Shell Fuzzy Finder
if [[ -f ~/.fzf.zsh ]]; then
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  source ~/.fzf.zsh
fi

# Start starship
is-callable starship && eval "$(starship init zsh)"

local func_path=~/.cache/prezto/site-functions

for cosmos_bin in gaiad akash archwayd; do
  if is-callable $cosmos_bin && [[ ! -f $func_path/_$cosmos_bin ]]; then
    $cosmos_bin completion --zsh > $func_path/_$cosmos_bin
  fi
done

if is-callable op && [[ ! -f $func_path/_op ]]; then
  op completion zsh > ~/.cache/prezto/site-functions/_op
fi

# Monk
is-callable monk && complete -o nospace -C monk monk

# DigitalOcean CLI
if is-callable doctl; then
  # Lazy load doctl completion
  function doctl() {
    unset -f doctl
    source <(doctl completion zsh)
    doctl $@
  }
fi

# Google Cloud SDK
if is-callable gcloud; then
  # Lazy load gcloud completion
  function gcloud() {
    unset -f gcloud
    GCLOUD_SDK_HOME="/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk"
    if [[ -d "${GCLOUD_SDK_HOME}" ]]; then
      source "${GCLOUD_SDK_HOME}/path.zsh.inc"
      source "${GCLOUD_SDK_HOME}/completion.zsh.inc"
    fi
    gcloud $@
  }
fi

# iTerm2 Shell Integration
if [[ -f "$HOME/.iterm2_shell_integration.zsh" && "$TERM" != "xterm-kitty" ]]; then
  source "$HOME/.iterm2_shell_integration.zsh"
fi

#
# Helper functions
#

function nvm-enable {
  if [[ "$OSTYPE" == darwin* ]]; then
    nvm_prefix=$(brew --prefix nvm)
  fi
  [[ -d $nvm_prefix ]] && source $nvm_prefix/nvm.sh
}

# Installs completions that were not auto installed
function install-completions {
  [ -f $site_functions_path/_brew ] || \
    ln -s $(brew --prefix)/Library/Contributions/brew_zsh_completion.zsh \
          $site_functions_path/_brew

  if [ -d /Applications/Docker.app/Contents/Resources/etc ]; then
    docker_functions=(docker docker-compose docker-machine)
    for fn in $docker_functions; do
      ln -s /Applications/Docker.app/Contents/Resources/etc/$fn.zsh-completion $site_functions_path/_$fn
    done
  fi

  zcompile "${ZDOTDIR:-$HOME}/.zcompdump"
}

function update-system-env {
  launchctl setenv PATH "${PATH}"

  for var in $(env | grep _HOME | awk -F= '{print $1}'); do
    launchctl setenv $var "${(P)var}"
  done
}

function zupdate() {
  set -e

  git -C "${HOME}/.zprezto" stash -u \
    && git -C "${HOME}/.zprezto" pull --rebase --prune \
    && git -C "${HOME}/.zprezto" stash pop

  if [[ -d ${HOME}/.zprezto/contrib ]]; then
    git -C "${HOME}/.zprezto/contrib" stash -u \
      && git -C "${HOME}/.zprezto/contrib" pull --rebase --prune \
      && git -C "${HOME}/.zprezto/contrib" stash pop
  fi
}

function yadm-prezto() {
  yadm add ~/.zprezto && yadm cis -m 'update prezto'
}

function cdtmp() {
  local TMPDIR="$(mktemp -d)"
  ${SHELL} -c "cd ${TMPDIR}; ${SHELL}; rm -rf ${TMPDIR}"
}

# Load local zshrc
[[ -f "$HOME/.zshrc.local" ]] && source "$HOME/.zshrc.local"
