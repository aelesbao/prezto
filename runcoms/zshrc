#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Augusto Elesb√£o <aelesbao@gmail.com>
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
#
stty -ixon # set the options for a terminal device interface

# history ignores lines starting with white spaces
setopt HIST_IGNORE_SPACE

# Use CTRL+arrows to move backward and forward words
bindkey ';5D' emacs-backward-word
bindkey ';5C' emacs-forward-word

# Aliases
(( $+commands[nvim] )) && alias vim='nvim'
(( $+commands[hub] )) && alias git='hub'

alias resource="source ${HOME}/.zshrc"

function zupdate() {
  git -C "${HOME}/.zprezto" stash -u \
    && git -C "${HOME}/.zprezto" pull --rebase --prune \
    && git -C "${HOME}/.zprezto" stash pop
}

alias vim='vim -X'

alias gc='git cis'
alias ghb='hub browse'
alias gr='/usr/local/bin/git rebase'
alias gri='/usr/local/bin/git rebase --interactive'

alias dc='docker-compose'

alias pwsafe=' pwsafe'
alias cdgr='cd $(git-root)'
alias psg='ps aux | grep -i'
alias backup='rsync -Pha'
alias date-iso='date +%Y-%m-%dT%H:%M:%S%z'

alias youtube-dl-mp3='youtube-dl -x --audio-format mp3 --audio-quality 320K'

path=(./bin $HOME/bin $path)

site_functions_path=/usr/local/share/zsh/site-functions

# Solarized dir_colors
[[ -f /etc/dir_colors ]] && eval `dircolors /etc/dir_colors`

# JDK
[[ -x /usr/libexec/java_home ]] && export JAVA_HOME=`/usr/libexec/java_home`

# Gradle
[[ -d /usr/local/opt/gradle ]] && export GRADLE_HOME=/usr/local/opt/gradle/libexec

# Groovy
[[ -d /usr/local/opt/groovy/libexec ]] && export GROOVY_HOME=/usr/local/opt/groovy/libexec

# Liquibase
[[ -d /usr/local/opt/liquibase/libexec ]] && export LIQUIBASE_HOME=/usr/local/opt/liquibase/libexec

# Android SDK path
[[ -d /usr/local/opt/android-sdk ]] && export ANDROID_HOME=/usr/local/opt/android-sdk

# FindBugs
[[ -d /usr/local/opt/findbugs ]] && export FINDBUGS_HOME=/usr/local/opt/findbugs

# pyenv
[[ -d /usr/local/var/pyenv ]] && export PYENV_ROOT=/usr/local/var/pyenv

# Travis CLI
[ -f "$HOME/.travis/travis.sh" ] && source "$HOME/.travis/travis.sh"

# Anaconda
#[[ -d "$HOME/anaconda3/bin" ]] && export PATH="$HOME/anaconda3/bin:$PATH"

# AWS Client
[[ -f /etc/zsh/aws_complete.zsh  ]] && source /etc/zsh/aws_complete.zsh
[[ -f $site_functions_path/_aws  ]] && source $site_functions_path/_aws

# Heroku Client
[[ -d /usr/local/heroku/bin ]] && export PATH="/usr/local/heroku/bin:$PATH"

# FZF - Shell Fuzzy Finder
if [[ -f ~/.fzf.zsh ]]; then
  # Setting ag as the default source for fzf. This will make fzf respect your .gitignore
  export FZF_DEFAULT_COMMAND='ag -g ""'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  source ~/.fzf.zsh
fi

# iTerm 2 Shell Integration
[[ -f "$HOME/.iterm2_shell_integration.zsh" ]] && source "$HOME/.iterm2_shell_integration.zsh"

[[ -d "$HOME/.nvm" ]] && export NVM_DIR="$HOME/.nvm"
function nvm-enable {
  if [[ "$OSTYPE" == darwin* ]]; then
    nvm_prefix=$(brew --prefix nvm)
  fi
  [[ -d $nvm_prefix ]] && source $nvm_prefix/nvm.sh
}

if [[ -d "$HOME/workspace/gocode" ]]; then
  export GOPATH="$HOME/workspace/gocode"
  export PATH="$PATH:$HOME/workspace/gocode/bin"
fi

function docker-env {
  docker-machine start $1
  eval $(docker-machine env $1)
}

function docker-clean {
  docker ps -a | grep 'ago' | awk '{print $1}' | xargs docker rm
  docker volume prune
  docker images | grep '<none>' | awk '{print $3}' | xargs docker rmi
}

function kafka-server {
  JAVA_HOME="$(/usr/libexec/java_home -v 1.7)" kafka-server-start.sh /usr/local/etc/kafka/server.properties
}

function start-datomic-console {
  DB=$1
  datomic-console -p 3000 $DB datomic:dev://localhost:4334/$DB
}

# Installs completions that were not auto installed
function install-completions {
  [ -f $site_functions_path/_brew ] || \
    ln -s $(brew --prefix)/Library/Contributions/brew_zsh_completion.zsh \
          $site_functions_path/_brew

  if [ -d /Applications/Docker.app/Contents/Resources/etc ]; then
    docker_functions=(docker docker-compose docker-machine)
    for fn in $docker_functions; do
      ln -s /Applications/Docker.app/Contents/Resources/etc/$fn.zsh-completion $site_functions_path/_$fn
    done
  fi
}

# Load local zshrc
[[ -f "$HOME/.zshrc.local" ]] && source "$HOME/.zshrc.local"
